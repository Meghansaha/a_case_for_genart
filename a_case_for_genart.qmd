---
title: "It's All About Perspective"
subtitle: "Making A Case for Generative Art"
author: "Meghan Harris, MPH"
institute: "Posit::conf(2023)"
date: "09-20-2023"
date-format: "MMMM Do, YYYY | YYYY-MM-DD"
format:
  revealjs: 
    slide-number: true
    width: 1690
    height: 1080
    linkcolor: "#ffffff"
   
    highlight-style: github
    code-copy: true
    code-overflow: scroll
    code-block-bg: true
    transition: fade
css: "scripts/style.css"
editor: visual
title-slide-attributes: 
  data-background-image: "images/background.png"
  data-background-size: "strecth"
  data-background-position: "center"
  data-background-color: "#1a1a1a"
  data-notes: "Good morning, everyone! Im Meghan Harris, I'm a data scientist at the Prostate Cancer Clinical Trials Consortium, and I'm also a generative artist that's here to introduce you all to generative art and, potentially, a different approach to learning data science. But before I dive in to that, I have to say that I feel like I'm only talking here today because I decided to stop working about 10 months ago. Now, Let me explain. I didn't go off the deep end and quit my job or anything, but as you can see here..."
transition: fade
---

##  {background-color="#1a1a1a" background-image="images/intro_back.png" background-size="cover"}

<center>

![A snapchat picture of me showing my baby bump at 37 weeks](images/whale_bump.jpg){width="700"}

</center>

::: notes
10 months ago I was very pregnant and ready to pop. I gave birth to a beautiful baby and went on maternity leave for 6 months and I know it sounds fake, but...
:::

##  {background-color="#1a1a1a" background-image="images/intro_back.png" background-size="cover"}

<center>

![A shot of me coding in R Studio while watching a baby monitor](images/unreal.jpg){width="1000"}

</center>

::: notes
... I actually found time to code on leave. But I had a rule to only code if it was for fun stuff like art...
:::

##  {background-color="#1a1a1a" background-image="images/intro_back.png" background-size="cover"}

<center>

![Some artwork I made on maternity leave](images/roundup.png){.false width="1300"}

</center>

::: notes
... By the end of my leave, I was actually amazed at how much coding to make art like this helped with practical data science skills. I credit this for smoothing out my transition back into work.And Today, I want to give you all a glimpse of how that was possible.
:::

##  {background-color="#1a1a1a" background-image="images/background1.png" background-size="cover"}

<br> <br> <br> <br> <br> <br> <br> <br> <br>

<center>

<h1>Disclaimer</h1>

</center>

::: notes
With that being said, I also want to give a disclaimer that it's OK if you don't know how to make generative art, or even if you don't like art. It's also OK if you don't know much about data science. My hope is that you treat this talk like a choose-your-own-adventure. just like those old goosebumps books. Hopefully, I'm not the only old person in here who remembers those, with those cool-looking covers? They kinda looked like this?
:::

##  {background-color="#7a2929"}

::: columns
::: {.column width="50%"}
![](images/ga1.png)
:::

::: {.column width="50%"}
![](images/ga2.png)
:::
:::

::: notes
So whether you're here for the art
:::

##  {background-color="#7a2929"}

::: columns
::: {.column width="50%"}
![](images/ds1.png)
:::

::: {.column width="50%"}
![](images/ds2.png)
:::
:::

::: notes
or the data science...
:::

##  {background-color="#7a2929"}

<center>

![](images/learn1.png){width="50%"}

<center>

::: notes
or just learning, I'm hoping there will be something for you to take away from this today. So let's get started. -\>
:::

## What are we Talking About Today? {.black background-color="#1a1a1a" background-image="images/map1.png" background-size="cover"}

::: {#bullet}
-   <h3>What is Generative Art?</h3>
:::

## What are we Talking About Today? {.black background-color="#1a1a1a" background-image="images/map2.png" background-size="cover"}

<div>

-   <h3>What is Generative Art?</h3>

-   <h3>How Can we Make Generative Art in R or Python?</h3>

</div>

## What are we Talking About Today? {.black background-color="#1a1a1a" background-image="images/map3.png" background-size="cover"}

<div>

-   <h3>What is Generative Art?</h3>

-   <h3>How Can we Make Generative Art in R or Python?</h3>

-   <h3>Benefits of Creating Generative Art</h3>

</div>

## What are we Talking About Today? {.black background-color="#1a1a1a" background-image="images/map4.png" background-size="cover"}

<div>

-   <h3>What is Generative Art?</h3>

-   <h3>How Can we Make Generative Art in R or Python?</h3>

-   <h3>Benefits of Creating Generative Art</h3>

-   <h3>What is Data Science?</h3>

</div>

## What are we Talking About Today? {.black background-color="#1a1a1a" background-image="images/map5.png" background-size="cover"}

<div>

-   <h3>What is Generative Art?</h3>

-   <h3>How Can we Make Generative Art in R or Python?</h3>

-   <h3>Benefits of Creating Generative Art</h3>

-   <h3>What is Data Science?</h3>

-   <h3>Examples of How Generative Art Translates into Data Science</h3>

</div>

## What are we Talking About Today? {.black background-color="#1a1a1a" background-image="images/map6.png" background-size="cover"}

<div>

-   <h3>What is Generative Art?</h3>

-   <h3>How Can we Make Generative Art in R or Python?</h3>

-   <h3>Benefits of Creating Generative Art</h3>

-   <h3>What is Data Science?</h3>

-   <h3>Examples of How Generative Art Translates into Data Science</h3>

-   <h3>Final Thoughts</h3>

</div>

##  {background-color="#1a1a1a" background-image="images/background2.png" background-size="cover"}

<br> <br> <br> <br> <br> <br> <br> <br> <br>

<center>

<h1>What is Generative Art?</h1>

</center>

::: notes
So I want to pose a question to you all, you don't have to answer me, but just think for a second, what do ***you*** think generative art is?

-   Is it opening up a digital sketchpad and physically drawing on a screen?
-   Is it using a 3D Plotter to create art?
-   Is it making automated code that spits out random images
-   Is outputs from AI art platforms like Dall-E or Lensa?

So, I tried to find an official definition of generative art for you all, But it wasn't in Webster or anything, so of course I had to use Wikipedia...
:::

## What is Generative Art? {.purple background-color="#6c4161"}

<br>

According to Wikipedia:

> *Generative art refers to art that in whole or in part has been created with the use of an autonomous system.*

<br> <br>

. . .

Further:

> *An autonomous system in this context is generally one that is non-human and can independently determine features of an artwork that would otherwise require decisions made directly by the artist.*

::: notes
So, I'll tell you right now....my response to this was "nah, this ain't it"..

actually...
:::

## What is Generative Art? {.purple background-color="#6c4161"}

<br>

<center>

<div>

![](images/wrong.png){.false fig-align="left" width="45%"} ![](images/judging-you.gif){fig-align="center" width="40%"}

</div>

</center>

::: notes
this was my reaction reading that definition..

Because..I don't agree with the inclusion of the words "autonomous system." I feel that it implies that no work goes into the creation of generative art as a whole. Generative art is not simply just prompting a computer with something.

It is true that some art is created with automated algorithms... But to generally say this is ALL generative art is wrong in my opinion... so...
:::

## What is Generative Art? {.purple background-color="#6c4161"}

<br> <br>

In this room today, Generative Art is defined as:

<br> <br>

> **Artwork created through a program in any language or interface. As long as a program executes the generation of the art, it can be considered generative art.**

::: notes
Now, some of you might be thinking..that's vague and general, and yes. that's on purpose

<br>

Because I can guarantee you, that there are multiple definitions of generative art floating around in your minds, collectively in this room right now.

and I'm making an assumption here that a portion of you know what kind of generative art I'm actually talking about today, and another chunk of you might just be thinking about AI art,

<br>

so let's get this out of the way now... I don't know much about AI art, actually, I've only made AI art once..
:::

## What is Generative Art - Distinctions {.purple background-color="#6c4161" auto-animate="true"}

::: {style="position: relative; float: center; margin-top: 100px;"}
<center>![](images/ai_art_ex.png){fig-alt="A vast, cosmic, and beautiful galaxy with swirling blue, purple, and pink colors in the background. In the foreground a vibrantly colored planet directly in front of the sun." width="800"}</center>
:::

::: notes
Which produced this lovely piece here.

Now, I don't know too much about AI art so we wont be talking it today, but there are two things that I want to clarify in regards to AI art and automation...
:::

## What is Generative Art? - Distinctions {.purple background-color="#6c4161" auto-animate="true"}

::: columns
::: {.column style="position: relative; float: left; margin-top: 100px; width='50%';  margin-right:0px;"}
<center>![](images/ai_art_ex.png){fig-alt="A vast, cosmic, and beautiful galaxy with swirling blue, purple, and pink colors in the background. In the foreground a vibrantly colored planet directly in front of the sun." width="800"}</center>
:::
:::

::: {.column width="50%"}
<br><br>

::: fragment
-   While all AI Art is generative art...
:::

::: fragment
-   All generative art **IS NOT** AI art
:::

::: fragment
<br>

<center>&</center>

<br>
:::

::: fragment
-   While some generative art is randomly calculated by the computer...
:::

::: fragment
-   Some generative art is intentional and deliberately calculated by a human
:::
:::

::: notes
:::

## What is Generative Art? - Distinctions {.purple background-color="#6c4161"}

<br> <br>

<center>![](images/manual_scene.png)</center>

## What is Generative Art? - Distinctions {.purple background-color="#6c4161"}

::: columns
::: {.column width="50%"}
![](images/manual_scene.png)
:::

::: {.column width="50%"}
```{r, echo = TRUE, eval = FALSE}
# Library Load-In 
library(tidyverse)

#Asset Creation====

top_left_quad <- tibble(
  x = c(1,1,3,5,5.1,1,5.1,5.1,1),
  y = c(10,7.5,7,7,7.5,7.5,7.5,10,10)
)

top_right_quad <- tibble(
  x = c(6.5,10,10,7.4,6.5,7.4,10,10,7.4,7.4,7.4,6.5,6.5),
  y = c(7,7,7.5,7.5,7,7.5,7.5,10,10,7.5,10,10,7)
)

bottom_left_wall <- tibble(
  x = c(3.25,3.25,7.5,7.5,3.25),
  y = c(7.2,3,3,7.2,7.2)
)

bottom_left_supports <- tibble(
  x = c(3,3,3.5,3.5,3,
        3.5,3.5,3.55,3.55,3.55,3.5,3,
        3.8,3.8,4.3,4.3,3.8,4.3,4.3,4.35,4.35,4.35,4.3,3.8),
  y = c(7.4,2,2,7.4,7.4,
        7.4,2,2.3,2.3,7.3,7.4,7.4,
        7.4,2,2,7.4,7.4,
        7.4,2,2.3,2.3,7.3,7.4,7.4),
  group = rep(1:2, each = 12)
  ) |>
  mutate(x = x -.3)

```
:::
:::

::: notes
Heres, an example of a more manual piece of art. With just a snippet of code. What I want to point out here are all of these numbers that are literally making this image here. Those of you familiar with coding, especially the tidyverse, can probably see that I'm manually creating this data. This did not include an autonomous system....
:::

## What is Generative Art? - Distinctions {.purple background-color="#6c4161"}

::: columns
::: {.column width="50%"}
<br>

<center>![](images/rainbow_orb.png){width="696"}</center>
:::

::: {.column width="50%"}
```{r, echo = TRUE, eval = FALSE}
# Library Load-In====
library(tidyverse) # For everything data
library(artpack) # For art tools

## Number of points data wanted====
n <- 10000

## Randomly sampled angles
theta <- seq(
  from = sample(-500:500,1),
  to = sample(-500:500,1),
  length = n
  ) 

## Circle's radius
r = 1:n

## Placing everything into a dataset====
data <- tibble(
  x = cos(theta)*r,
  y = sin(theta)*r,
  color = art_pals("rainbow",n)
)

# Pulling it all together====
data |>
  ggplot(aes(x = x, y = y)) +
  geom_path(
    color = data$color,
    position = position_jitter(width = 20, height = 10),
    linewidth = sample(seq(0,5, l = n))
    ) +
  theme_void() +
  theme(panel.background = element_rect(fill = "black"))+
  coord_equal()
```
:::
:::

::: notes
This is another example of some more randomly generated art. I would say that this does use an autonmous system, because you can possibly get a new output everytime it's ran like this...
:::

## What is Generative Art? - Distinctions {.purple background-color="#6c4161"}

::: columns
::: {.column width="50%"}
<br>

<center>![](images/rainbow_orb2.png){width="696"}</center>
:::

::: {.column width="50%"}
```{r, echo = TRUE, eval = FALSE}
# Library Load-In====
library(tidyverse) # For everything data
library(artpack) # For art tools

## Number of points data wanted====
n <- 10000

## Randomly sampled angles
theta <- seq(
  from = sample(-500:500,1),
  to = sample(-500:500,1),
  length = n
  ) 

## Circle's radius
r = 1:n

## Placing everything into a dataset====
data <- tibble(
  x = cos(theta)*r,
  y = sin(theta)*r,
  color = art_pals("rainbow",n)
)

# Pulling it all together====
data |>
  ggplot(aes(x = x, y = y)) +
  geom_path(
    color = data$color,
    position = position_jitter(width = 20, height = 10),
    linewidth = sample(seq(0,5, l = n))
    ) +
  theme_void() +
  theme(panel.background = element_rect(fill = "black"))+
  coord_equal()
```
:::
:::

::: notes
and this...
:::

## What is Generative Art? - Distinctions {.purple background-color="#6c4161"}

::: columns
::: {.column width="50%"}
<br>

<center>![](images/rainbow_orb3.png){width="696"}</center>
:::

::: {.column width="50%"}
```{r, echo = TRUE, eval = FALSE}
# Library Load-In====
library(tidyverse) # For everything data
library(artpack) # For art tools

## Number of points data wanted====
n <- 10000

## Randomly sampled angles
theta <- seq(
  from = sample(-500:500,1),
  to = sample(-500:500,1),
  length = n
  ) 

## Circle's radius
r = 1:n

## Placing everything into a dataset====
data <- tibble(
  x = cos(theta)*r,
  y = sin(theta)*r,
  color = art_pals("rainbow",n)
)

# Pulling it all together====
data |>
  ggplot(aes(x = x, y = y)) +
  geom_path(
    color = data$color,
    position = position_jitter(width = 20, height = 10),
    linewidth = sample(seq(0,5, l = n))
    ) +
  theme_void() +
  theme(panel.background = element_rect(fill = "black"))+
  coord_equal()
```
:::
:::

::: notes
and this...

Now that i've got that clarified,
:::

##  {background-color="#1a1a1a" background-image="images/background3.png" background-size="cover"}

<br> <br> <br> <br> <br> <br> <br> <br> <br>

<center>

<h1>How Can we Make Generative Art<br>in R or Python?</h1>

</center>

## How Can we Make Generative Art in R or Python? {.mutedblue background-color="#4e5483"}

<br> <br> <br>

<center>

::: {#bluequote}
> Making generative art might not be as hard as you think...
>
> You just need ✨data✨ and to
>
> [Think outside the grid](https://thetidytrekker.com/post/thinking-outside-the-grid/thinking-outside-the-grid.html) 📊 of your favorite graphical software/package
:::

</center>

::: notes
It's probably safe to say we have data people in here, and probably safe to say most of you have either created data visualizations with R or Python. I will say this, if you know how to make visuals in R or Python, you're already half way there. If you really want to dive into making this change in thinking in R with ggplot2, this slide has a link to a blog post I made showing this in detail in a beginner friendly way.

I so so so, wish I had enough time to really dive into how to really do this in your language of choice, but I don't have the time, so heres a gist
:::

## How Can we Make Generative Art in R or Python? {.mutedblue background-color="#4e5483"}

<br><br>

<center>

<h3>Some Primitive Graphical Tools🛠</h3>

</center>

<br> <br>

::: columns
::: {.column width="50%"}
<center>**R Packages** ![](images/r_logo.png)</center>

<center>

-   [`ggplot2`](https://ggplot2.tidyverse.org/)
-   Base R w/ `plot()` functions or [`grid`](https://www.stat.auckland.ac.nz/~paul/grid/grid.html)
-   [`r2D3`](https://rstudio.github.io/r2d3/)
-   [`lattice`](http://lattice.r-forge.r-project.org/)

</center>
:::

::: {.column width="50%"}
<center>**Python Libraries** ![](images/python_logo.png)</center>

<center>

-   [`plotnine`](https://plotnine.readthedocs.io/en/stable/)
-   [`pillow`(PIL)](https://pypi.org/project/Pillow/)
-   [`matplotlib`](https://matplotlib.org/)
-   [`turtle`](https://docs.python.org/3/library/turtle.html)

</center>
:::
:::

<br><br>

<center>*If it lets you plot data, it will let you make art...*</center>

::: notes
When first starting out, picking a package or library you are already familiar with may be helpful. But my personal bias is ggplot2 for R and plotnine for python because it's ggplot2.

I say this because of the grammar of graphics framework it is built on. I personally think it's conducive to creating generative art.

But you don't need to use the tidyverse of ggplot to create art. The main point is that if a tool lets you plot data, it will let you make art. The challenge comes in when you need to understand how data translates into a visual.
:::

## How Can we Make Generative Art in R or Python? {.mutedblue background-color="#4e5483" background-video="images/line_ex.mp4" background-video-loop="true" background-video-muted="true" background-size="contain"}

::: notes
Imagine that we want to draw a line on a piece paper,
that's straightforward. If someone is physically able to pick up a pen, and draw a straight line on a piece of paper, that's something most people could probably think they could do. Some people might think they can't draw at all so wouldn't be able to make a straight line, so maybe they try to do this on graph paper instead.. 
:::

## How Can we Make Generative Art in R or Python? {.mutedblue background-color="#4e5483" background-video="images/graph_ex.mp4" background-video-loop="true" background-video-muted="true" background-size="contain"}

::: notes
Now, this may be way easier to people. There's a guide now. A grid that can help you keep your line straight.

But if you stop for a minute and think...where have a seen a grid before?

For you, it may be in any of your favorite visualization tools, for me, it's ggplot2
:::

## How Can we Make Generative Art in R or Python? {.mutedblue background-color="#4e5483" background-video="images/graph_ex.mp4" background-video-loop="true" background-video-muted="true" background-size="contain"}

::: notes
Now, this may be way easier to people. There's a guide now. A grid that can help you keep your line straight.

But if you stop for a minute and think...where have a seen a grid before?

For you, it may be in any of your favorite visualization tools, for me, it's ggplot2
:::

## How Can we Make Generative Art in R or Python? {.mutedblue background-color="#4e5483" background-video="images/graph_ex2.mp4" background-video-loop="true" background-video-muted="true" background-size="contain"}

::: notes
So now using a grid as guidance, we can set values to every mark we make on the paper. Set up on a coordinate system.

If you take the time to understand the relationship between the visuals you want to make, and the data you need to make them, this process becomes easier to make more complicated things.
:::



##  {background-color="#1a1a1a" background-image="images/background4.png" background-size="cover"}

<br> <br> <br> <br> <br> <br>

<center>

<h1>Benefits of Creating<br>Generative Art</h1>

</center>

## Benefits of Creating Generative Art {.turq background-color="#3a7188"}

##  {background-color="#1a1a1a" background-image="images/background5.png" background-size="cover"}

<br> <br> <br> <br> <br> <br> <br>

<center>

<h1>What is Data Science?</h1>

</center>

## What is Data Science? {.green background-color="#657750"}

##  {background-color="#1a1a1a" background-image="images/background6.png" background-size="cover"}

<br> <br> <br> <br> <br> <br> <br> <br> <br>

<center>

<h1>Examples of How Generative Art Translates into Data Science</h1>

</center>

## Examples of How Generative Art Translates into Data Science {.yellow background-color="#ba9c5e"}

##  {background-color="#1a1a1a" background-image="images/background7.png" background-size="cover"}

<br> <br> <br> <br> <br> <br> <br> <br> <br>

<center>

<h1>Final Thoughts</h1>

</center>

## Takeaway {background-color="#bb743e"}
